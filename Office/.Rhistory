pred_ANN = predict(ANN_model, train_data)
rmse(pred_MLR, train_data$TOTAL_E)
rmse(pred_ANN, train_data$TOTAL_E)
View(ANN_model)
ANN_model = neuralnet(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC,
data = train_data, hidden = c(12, 12, 6), act.fct = "logistic", linear.output = FALSE)
plot(ANN_model)
#ANN Fit 확인
pred_ANN <- compute(ANN_model, train_data)
plot(train_data~pred_ANN$net.result)
library(neuralnet)
library(Metrics)
library(MASS)
data("Boston")
force(Boston)
data <- Boston
keeps <- c("crim","indus","nox","rm","age","dis","tax","ptratio","lstat","medv")
data<-data[keeps]
View(Boston)
data<-scale[data]
set.seed(2016)
n = nrow(data)
train <- sample(1:n, 400,FALSE)
f<-medv~ crim+indus + nox + rm + age + dis + tax + ptratio + lstat
fit<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
err.fct ="sse",
act.fct = "logistic",
threshold = 0.1,
linear.output = TRUE)
pred<-compute(fit, data[-train, 1:9])
data[train,]
test <- data[train,]
View(test)
test <- data[train, 1:9]
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("AllCombinedResults_Truncated_20220925.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = data_train)
summary(MLR_model)
library(Metrics)
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
ANN_model =neuralnet(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data
, hidden=c(10,10,10), act.fct = "logistic", linear.output = FALSE)
summary(ANN_model)
Predict=compute(ANN_model,test_data)
Predict$net.result
View(Predict)
library(neuralnet)
library(Metrics)
library(MASS)
data("Boston")
data <- Boston
keeps <- c("crim","indus","nox","rm","age","dis","tax","ptratio","lstat","medv")
data<-data[keeps]
data<-scale[data]
set.seed(2016)
n = nrow(data)
train <- sample(1:n, 400,FALSE)
test <- data[train, 1:9]
f<-medv~ crim+indus + nox + rm + age + dis + tax + ptratio + lstat
fit<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
err.fct ="sse",
act.fct = "logistic",
threshold = 0.1,
linear.output = TRUE)
library(Metrics)
library(MASS)
data("Boston")
data <- Boston
keeps <- c("crim","indus","nox","rm","age","dis","tax","ptratio","lstat","medv")
data<-data[keeps]
data<-scale[data]
set.seed(2016)
n = nrow(data)
train <- sample(1:n, 400,FALSE)
test <- data[train, 1:9]
f<-medv + crime ~ indus + nox + rm + age + dis + tax + ptratio + lstat
fit<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
err.fct ="sse",
act.fct = "logistic",
threshold = 0.1,
linear.output = TRUE)
View(Boston)
data("Boston")
data <- Boston
keeps <- c("crim","indus","nox","rm","age","dis","tax","ptratio","lstat","medv")
data<-data[keeps]
data<-scale[data]
set.seed(2016)
n = nrow(data)
train <- sample(1:n, 400,FALSE)
test <- data[train, 1:9]
f<-medv + crim ~ indus + nox + rm + age + dis + tax + ptratio + lstat
fit<-neuralnet(f,
data = data[train,],
hidden = c(10,12,20),
algorithm = "rprop+",
err.fct ="sse",
act.fct = "logistic",
threshold = 0.1,
linear.output = TRUE)
pred<-compute(fit, data[-train, 1:9])
plot(data[-train,10]~pred$net.result)
plot(data[-train,9]~pred$net.result)
View(pred)
plot(data[-train,10]~pred$net.result)
View(fit)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
#data_train<- read.csv("Uniform_AllCombinedResults.csv")
data_train<- read.csv("AllCombinedResults_Truncated_sampling500.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa) #Total sobol
View(Sa)
Sobol <- print(Sa)
View(Sobol)
View(Sobol)
View(Sa)
View(Sa[["S"]])
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/residential")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa) #Total sobol
View(Sa)
View(Sa[["S"]])
ggplot(Sa)
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
View(Sa)
library(randomForest)
library(ggplot2)
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/residential")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa) #Total sobol
ggplot(Sa)
print(Sa) #Total sobol
ggplot(Sa)
Sobol <- print(Sa)
View(Sobol)
Sobol <- Sobol[c(1:12),1]
Sobol <- data.frame(Sobol)
rownames(Sobol) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
View(Sobol)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
View(Sa)
View(Sa[["S"]])
print(Sa[S]) #Total sobol
print(Sa["S"]) #Total sobol
ggplot(Sa)
Sobol <- print(Sa)
Sobol <- Sobol[c(1:12),1]
Sobol <- print(Sa["S"])
Sobol <- Sobol[c(1:12),1]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa["S"]) #Total sobol
ggplot(Sa)
Sobol <- print(Sa["S"])
Sobol <- Sobol[c(1:12),1]
View(Sobol)
View(Sobol[["S"]])
Sobol <- print(Sobol[["S"]][["original"]])
Sobol <- data.frame(Sobol)
View(Sobol)
Sobol <- print(Sobol[["S"]][["original"]])
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
Sobol <- print(Sobol[["S"]][["original"]])
Sobol <- Sobol[c(1:12),1]
Sobol <- data.frame(Sobol)
rownames(Sobol) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
Sobol <- print(Sobol[["S"]][["original"]])
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
Sobol <- print(Sobol[["S"]][["original"]])
View(Sa)
View(Sa[["S"]])
Sobol <- print(Sa["S"]][["original"]])
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa["S"]["original"]) #Total sobol
Sobol <- print(Sobol[["S"]][["original"]])
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa["S"]) #Total sobol
Sobol <- print(Sa["S"])
View(Sobol)
View(Sobol[["S"]])
Sobol[["S"]][["original"]]
Sobol <- Sobol[["S"]][["original"]]
Sobol <- data.frame(Sobol)
View(Sobol)
rownames(Sobol) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
Sobol <- Sobol[c(1:12)]
Sobol <- Sobol[1:12]
Sobol <- data.frame(Sobol)
Sobol <- Sobol[1:12]
Sobol <- data.frame(Sobol)
Sobol <- print(Sa["S"])
Sobol <- Sobol[["S"]][["original"]]
Sobol[1]
Sobol[1:3]
Sobol[1:12]
Sobol <- data.frame(Sobol[1:12])
rownames(Sobol) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
View(Sobol)
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
#data_train<- read.csv("Uniform_AllCombinedResults.csv")
data_train<- read.csv("AllCombinedResults_Truncated_sampling500.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa["S"]) #Total sobol
ggplot(Sa)
Sobol <- print(Sa["S"])
Sobol <- Sobol[["S"]][["original"]]
Sobol <- data.frame(Sobol[1:12])
rownames(Sobol) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
View(Sobol)
write.csv(Sobol,"Sobol_office_Truncated.csv")
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
#data_train<- read.csv("Uniform_AllCombinedResults.csv")
data_train<- read.csv("AllCombinedResults_Truncated_sampling500.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/residential")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
B_E = sample(1:nrow(data_train), 0.7*nrow(data_train))
train_data=data_train[B_E,]
test_data = data_train[-B_E,]
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
colnames(train_data) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
MLR_model =  lm(TOTAL_E ~ ROOF + WALL + FLOOR + WIN + SHGC + LPD + HEATEFF + COP + EPD + HSP + CSP + OCC, data = train_data)
summary(MLR_model)
pred_MLR = predict(MLR_model, train_data)
##################################################################
#######SRRC 민감도 분석##########################################
srrc.result <- src(data_train[,c(1:12)],data_train[,13],rank=T)
srrc <- abs(srrc.result$SRRC[,1])
srrc <- data.frame(srrc)
rownames(srrc) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC")
#################################################################
######SoboL 민감도 분석#########################################
x1 <- data_train
set.seed(1)
x2  <- data_train[sample(1:nrow(data_train)),]
Sa <- sobol2002(mode = MLR_model, X1 = x1, X2 = x2, order =2, nboot=500)
print(Sa["S"]) #Total sobol
ggplot(Sa)
Sobol <- print(Sa["S"])
Sobol <- Sobol[["S"]][["original"]]
library(ggplot2)
library(nnet)
library(devtools)
library(sensitivity)
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
colnames(data_train) <- c("ROOF", "WALL", "FLOOR", "WIN", "SHGC", "LPD","HEATEFF","COP","EPD","HSP", "CSP", "OCC", "TOTAL_E")
library(randomForest)
library(ggplot2)
library(nnet)
library(devtools)
library(neuralnet)
library(Metrics)
rm(list=ls())
setwd("C:/Users/ehdna/OneDrive - konkuk.ac.kr/학술발표대회/2022_동계학술발표대회/Sensitivity Analysis/Office")
getwd()
#data_train<- read.csv("AllCombinedResults_2006.csv")
#data_train<- read.csv("AllCombinedResults_2009.csv")
#data_train<- read.csv("AllCombinedResults_2012.csv")
#data_train<- read.csv("AllCombinedResults_2015.csv")
#data_train<- read.csv("AllCombinedResults_2018.csv")
data_train<- read.csv("Uniform_AllCombinedResults.csv")
